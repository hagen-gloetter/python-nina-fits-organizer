Du bist ein professioneller Python Programmierer und Astronom. 
Du hast in deiner Sternwarte vier verschiedene Teleskope, die alle unterschiedliche Brennweiten haben.
Du verwendest die Software N.i.n.a., um die Bilder zu erstellen.
N.i.n.a. legt standardmäßig einen Haupt-Ordner mit dem aktuellen Datum an. 
In diesem Ordner befinden sich Unterordner mit den Namen "FLAT", "DARK", "BIAS", "LIGHT", "SNAPSHOT", diese Unterstruktur sollen erhalten bleiben.
In diesen Unterordnern befinden sich die Aufnahmen die im Fits Format abgelegt werden. 
Die Files beginnen mit dem Datum im Format "YYYY-MM-DD_HH-mm" danach folgt eine Zeichenkette die variieren kann kommt eine vierstellige Zahlenfolge.
Es kann vorkommen, dass wenn in einer Nacht mehrere astronomische Objekte aufgenommen werden. Die Fits Dateien von den verschiedenen Objekten befinden sich dann im gleichen Ordner, in diesem Fall lege bitte für jedes aufgenommen Objekt einen neuen Hauptordner mit entsprechender Struktur an.
Beispiel: Wenn in einer Nacht M-51 und M-101 aufgenommen wurden, sollen zwei Hauptordner (M-51_..., M-101_...) mit je eigener LIGHT/DARK/etc.-Struktur erstellt werden.
Ordner die nach dem vershieben leer sind können gelöscht werden.

Die Anforderungen an das Programm:
Das Programm soll "hg-nina-fits-organizer.py" heißen
Der Ausgangsordner (Startpunkt) soll als Parameter übergeben werden. 
Wenn kein Parameter angegeben wird, soll der aktuelle Ordner, in dem sich das Skript befindet, verwendet werden.
Das Programm soll ein Logfile schreiben im Format ""Datum"-"Uhrzeit"-"Programmname".log
Das Logfile soll im Skript-Ordner erstellt werden.
Das log soll folgende Informationen schreiben: Pfade der verschobenen Dateien, Alte und neue Pfade, Alte und neue Dateinamen, Fehlermeldungen bei fehlenden Headerwerten.

Bitte füge eine einen DRY-RUN Parameter am Anfang des Codes ein: DRY-RUN=TRUE oder FALSE
Der DRY-RUN Modus soll nicht destruktiv sein alles genau gleich machen wie der normale Modus, lediglich das finale umbenennen und umkopieren soll übersprungen werden.

Bitte schreib mir ein Python Programm, dass die Ordner umbenennt indem es die Fits-Header ausliest und den übergeordneten Ordner in dem sich die Lights befinden nach folgendem Schema umbenennt:

Ordner:
"OBJECT"_"TELESCOP"_"DATE-LOC"_"FOCALLEN"_e"EXPOSURE"_g"GAIN"_t"CCD-TEMP"_"CAMERAID" 
Wenn das OBJECT keinen Namen oder einen leere String hat soll es "UNKNOWN" heissen.
Alle "Leerzeichen" in den ausgelesen Header Werten sollen durch einen Bindestrich "–" ersetzt werden. Andere Sonderzeichen (wie /, :) in den Header-Werten sollen entfernt werden.
"DATE-LOC" soll in den Dateinamen nur Jahr-Monat-Tag enthalten.

Dateien:
Die original Fits Dateien enden mit einer Numerierung, einer Zahlenfolge wie zB _0001, _0002 usw.  
Diese Numerierung soll in dem umbenannten Dateinamen als suffix vor der Endung .fits erhalten bleiben. 
Umbenennen der FITS-Dateien: Die vierstellige Nummer wird eins zu eins übernommen. Beispiel: _0007 aus Original bleibt _0007 in der neuen Datei.
Die einzelnen Fits-files sollen mit den Werten aus dem FITS-Header nach folgendem Schema umbenannt werden:
"IMAGETYP"_"DATE-LOC"_e"EXPOSURE"_g"GAIN"_t"CCD-TEMP"_"OBJECT"_"Number from source file".fits

Zielstruktur:
"Umbenannter Ordnername"/LIGHT/"umbenannte Fits-Dateien"

Beispiel für einen Dateinamen: 
2025-06-13\LIGHT\2025-06-14_00-14-59_Slot 1_-9.80_180.00s_0007.fits
Das Ergebnis soll dann so aussehen: 
M-51_ASA10_2025-06-14_950.0_e180.0_g200_t-9.8_ZWO-ASI2600MC-Pro\LIGHT\LIGHT_2025-06-14_e180.0_g200_t-9.8_M-51_0007.fits

Wenn Du Fragen dazu hast oder etwas nicht verstanden hast, stelle die Fragen bevor du anfängst einen Code zu erzeugen


